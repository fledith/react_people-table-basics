{"version":3,"sources":["components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["applyClassNames","isActive","classNames","Navbar","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","onSelectedPerson","slug","sex","onClick","name","PeopleTable","people","useState","selectedPerson","setSelectedPerson","findParent","useCallback","find","peopleWithParents","useMemo","map","mother","motherName","father","fatherName","born","died","PeoplePage","setPeople","isLoading","setIsLoading","isEmpty","setIsEmpty","hasError","setHasError","useEffect","length","catch","finally","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9c554010.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst applyClassNames = ({ isActive } : { isActive: boolean }) => (\n  classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  )\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={applyClassNames}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={applyClassNames}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <>\n    <h1 className=\"title\">Home Page</h1>\n  </>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n  onSelectedPerson: (selectedPerson: string) => void;\n}\n\nexport const PersonLink = ({ person, onSelectedPerson }: Props) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      onClick={() => onSelectedPerson(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useCallback, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable = ({ people }: Props) => {\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  const findParent = useCallback((name: string | null) => (\n    name ? people.find(person => person.name === name) : null\n  ), [people]);\n\n  const peopleWithParents = useMemo<Person[]>(() => (\n    people.map(person => ({\n      ...person,\n      mother: findParent(person.motherName),\n      father: findParent(person.fatherName),\n    }))\n  ), [people]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map(person => {\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': selectedPerson === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                  onSelectedPerson={setSelectedPerson}\n                />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother ? (\n                  <PersonLink\n                    person={person.mother}\n                    onSelectedPerson={setSelectedPerson}\n                  />\n                ) : person.motherName}\n              </td>\n              <td>\n                {person.father ? (\n                  <PersonLink\n                    person={person.father}\n                    onSelectedPerson={setSelectedPerson}\n                  />\n                ) : person.fatherName}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(response => {\n        if (response.length === 0) {\n          setIsEmpty(true);\n        } else {\n          setIsEmpty(false);\n        }\n\n        setPeople(response);\n        setHasError(false);\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Routes, Route, Navigate,\n} from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}